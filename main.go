package main

import (
	"fmt"
	"log"

	"github.com/hajimehoshi/ebiten/v2"
	"github.com/hajimehoshi/ebiten/v2/ebitenutil"
)

const (
	DISP_WIDTH    = 64
	DISP_HEIGHT   = 32
	DISP_SCALE    = 10
	MAX_MEMORY    = 4096
	FONT_SET_SIZE = 80
)

type (
	Game struct {
		memory [MAX_MEMORY]byte
	}
)

func (g *Game) Update() error {
	return nil
}

func (g *Game) Draw(screen *ebiten.Image) {
	ebitenutil.DebugPrint(screen, fmt.Sprint(g.memory[:FONT_SET_SIZE]))
}

func (g *Game) Layout(outWidth, outHeight int) (int, int) {
	return DISP_WIDTH, DISP_HEIGHT
}

func main() {
	ebiten.SetWindowSize(DISP_WIDTH*DISP_SCALE, DISP_HEIGHT*DISP_SCALE)
	ebiten.SetWindowTitle("Chippy")

	game := &Game{}

	mapFontset(&game.memory)

	if err := ebiten.RunGame(game); err != nil {
		log.Fatal(err)
	}
}

func mapFontset(m *[MAX_MEMORY]byte) {
	fontset := [FONT_SET_SIZE]byte{
		0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		0x20, 0x60, 0x20, 0x20, 0x70, // 1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
		0x90, 0x90, 0xF0, 0x10, 0x10, // 4
		0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
		0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
		0xF0, 0x10, 0x20, 0x40, 0x40, // 7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
		0xF0, 0x90, 0xF0, 0x90, 0x90, // A
		0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
		0xF0, 0x80, 0x80, 0x80, 0xF0, // C
		0xE0, 0x90, 0x90, 0x90, 0xE0, // D
		0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
		0xF0, 0x80, 0xF0, 0x80, 0x80, // F
	}
	copy(m[:], fontset[:])
}
